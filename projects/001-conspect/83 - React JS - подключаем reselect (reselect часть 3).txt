Кароче говоря reselect. Он избавляет нас от лишней перерисовки. В файле users-selectors есть селекторы.
Так вот, если селекторы простые типа этого

export const getUsers = (state) => {
    return state.usersPage.users;
}

... то реселектор можно не делать, однако если в нем более сложная логика, например filter или map
то незачем лишний раз нагружать проц и пересчитывать то что уже было пересчитанно.
Вот пример реселектора вместе с фильтром:

// Это простой примитивный селектор
const getUsersSelector = (state) => {
    return state.usersPage.users;
}

// Это уже более сложный селектор включающий в себя результат примитивного селектора
export const getUsers = createSelector(getUsersSelector, (users) => {
    return users.filter(u => true);
})


Функция реселектор использует обычного примитивного селектора и если видит изменения в 
результате своего выполнения то только тогда она перезапускает render и перерисовует DOM.


Кароче говоря если мы создаем более сложные селекторы на основе примитивного селектора.

Можно сказать так: Vghbvbnbdysq селектор только берет данные из state. сложный производит потом с
этими данными какие либо действия, но если нет изменений в примитивном селекторе то нет и смысла 
запускать сложный селектор. Полюбому значения будут одинаковы.

