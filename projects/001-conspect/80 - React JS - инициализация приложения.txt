Кароче говоря был проблемосик. Если мы стоим на вкладке диалоги и обновляем страницу то 
нас перекидывает на вкладку профиль. Почему так, вот что происходит.
Кгузится компонента "диалоги" и ей нужно знать кто мы такие, поэтому она делает запрос me()
и тот когда возвращает ответ сразу рендерит компоненту "Профиль". Но это еще не все, нам не 
нравится что в компоненте "Header" происходит узнавание авторизоваан ли пользователь или нет, поэтому 
мы это переносим в компоненту App.

Переделываем компоненту App в классовую и даем ей componentDidMount() который был в Header.

    componentDidMount() {
        this.props.getAuthUserData();
    }


... для того в props-ах появился getAuthUserData() мы делаем connect.

export default compose( // Череда событий для App
    withRouter, // Нужен для того чтобы небыло ошибок, так как Route плохо работают внутри connect-а
    connect(null, {getAuthUserData})) (App);


ВНИМАНИЕ!!! То как написанно выше у меня не работало, вроде как пофиксили проблему из-за которой 
димыч добавлял withRouter. Кароче у меня в коде это выглядит просто так:

export default connect(null, {getAuthUserData}) (App);


Возвращаемся к задаче. 

Мы создали app-reducer. 
В нем есть такая санка:

export const initializeApp = () => (dispatch) => {
    let promise = dispatch(getAuthUserData());
    Promise.all([promise]).then(() => {
        dispatch(initializedSuccess());
    });
}

в других санках можно было писать просто несколько dispatch() один за другим и все (они бы выполнились 
не последовательноБ а нам тут нужно последовательно), поэтому мы создаем промис и говорим что 
сначала поочереди нужно выполнить массив промисов а потом уже initializedSuccess.

теперь мы в App делаем такую фишку:
	if(!this.props.initialized){
            return <Preloader />
        }
и получается что пока мы не проинициализированны мы показываем прелоудер.


Еще мы в ProfileContainer сделали такое:
if(!userId){
	this.props.history.push("/login");
}

для того чтобы когда мы не получаем userID и мы не получили данные об авторизации мы переходим на страницу /login

